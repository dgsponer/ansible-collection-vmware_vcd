---
# tasks file for vcd_deploy_primary
- name: get ip for "{{ inventory_hostname }}" and "{{ inventory_hostname_short + '-db.' + vcd.deployment.search }}"
  set_fact:
    eth0_ip: "{{ lookup('dig', inventory_hostname) | ansible.utils.ipaddr }}"
    eth1_ip: "{{ lookup('dig', inventory_hostname_short + '-db.' + vcd.deployment.search ) | ansible.utils.ipaddr }}"

- name: abort if ip address could not be found for host
  fail:
    msg: "An IP could not be found for the system, got result: {{ inventory_hostname }}"
  when:
    - not eth0_ip
    - not eth1_ip


# https://docs.vmware.com/en/VMware-Cloud-Director/10.4/VMware-Cloud-Director-Install-Configure-Upgrade-Guide/GUID-2B34775B-7C96-44F2-A9A3-D6A9D3B0CAD2.html
- name: Deploy "{{ inventory_hostname }}"
  command: 
    argv:
      - ovftool
      - "--noSSLVerify"
      - "--acceptAllEulas"
      - "--X:enableHiddenProperties"
      - "--datastore={{ vcd.deployment.datastore }}"
      - "--allowAllExtraConfig"
      - "--net:eth0 Network={{ vcd.deployment.eth0.network }}"
      - "--net:eth1 Network={{ vcd.deployment.eth1.network }}"
      - "--name={{ inventory_hostname }}"
      - "--vmFolder={{ vcd.deployment.folder }}"
      - "--diskMode=thin"
      - "--prop:vami.ip0.VMware_vCloud_Director={{ eth0_ip }}" 
      - "--prop:vami.ip1.VMware_vCloud_Director={{ eth1_ip }}" 
      - "--prop:vami.DNS.VMware_vCloud_Director={{ vcd.deployment.dns }}" 
      - "--prop:vami.domain.VMware_vCloud_Director={{ vcd.deployment.domain }}" 
      - "--prop:vami.gateway.VMware_vCloud_Director={{ vcd.deployment.gateway }}" 
      - "--prop:vami.netmask0.VMware_vCloud_Director={{ vcd.deployment.eth0.netmask }}" 
      - "--prop:vami.netmask1.VMware_vCloud_Director={{ vcd.deployment.eth1.netmask }}" 
      - "--prop:vami.searchpath.VMware_vCloud_Director={{ vcd.deployment.search }}" 
      - "--prop:vcloudapp.enable_ssh.VMware_vCloud_Director={{ vcd.deployment.enable_ssh }}" 
      - "--prop:vcloudapp.expire_root_password.VMware_vCloud_Director={{ vcd.deployment.expire_root }}" 
      - "--prop:vcloudapp.nfs_mount.VMware_vCloud_Director={{ vcd.deployment.nfs_mount }}" 
      - "--prop:vcloudapp.ntp-server.VMware_vCloud_Director={{ vcd.deployment.ntp_server }}" 
      - "--prop:vcloudapp.varoot-password.VMware_vCloud_Director={{ vcd_root_password }}" 
      - "--prop:vcloudconf.db_pwd.VMware_vCloud_Director={{ vcd.deployment.db_password }}" 
      - "--prop:vcloudconf.admin_email.VMware_vCloud_Director={{ vcd.deployment.admin.email }}" 
      - "--prop:vcloudconf.admin_fname.VMware_vCloud_Director={{ vcd.deployment.admin.fullname }}" 
      - "--prop:vcloudconf.admin_pwd.VMware_vCloud_Director={{ vcd.password }}" 
      - "--prop:vcloudconf.admin_uname.VMware_vCloud_Director={{ vcd.username }}" 
      - "--prop:vcloudconf.inst_id.VMware_vCloud_Director={{ vcd.deployment.instance_id }}" 
      - "--prop:vcloudconf.sys_name.VMware_vCloud_Director={{ inventory_hostname }}" 
      - "--prop:vcloudconf.ceip_enabled.VMware_vCloud_Director={{ vcd.deployment.ceip }}"
      - "--deploymentOption={{ vcd_deployment_size }}" 
      - "--powerOn"
      - "{{ vcd.deployment.ova }}" 
      - "vi://{{ vcd.deployment.vce.username }}:{{ vcd.deployment.vce.password }}@{{ vcd.deployment.vce.hostname }}/{{ vcd.deployment.datacenter }}/host/{{ vcd.deployment.cluster }}"
  ignore_errors: true
  args:
    chdir: "{{ vcd.deployment.chdir }}"
  delegate_to: "{{ vcd.deployment.host }}"

- name: Connect to "{{ inventory_hostname }}" and get a token
  uri:
    url: https://{{ inventory_hostname }}/cloudapi/1.0.0/sessions/provider
    method: POST
    status_code: 200
    validate_certs: no
    headers:
      Accept: application/*;version={{ vcd.api_version }}
    user: "{{ vcd.username }}@system"
    password: "{{ vcd.password }}"
    force_basic_auth: yes
  until: vcd_session.status == 200 and vcd_session.x_vmware_vcloud_access_token is defined
  retries: 100
  delay: 15
  register: vcd_session
  delegate_to: "{{ vcd.deployment.host }}"

- name: Wait, that the cell "{{ inventory_hostname }}" is up and running
  uri:
    url: https://{{ inventory_hostname }}/cloudapi/1.0.0/cells
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      Accept: application/json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
  until: vcd_cells.status == 200 and inventory_hostname in (vcd_cells.json | json_query('values[*].name'))
  retries: 100
  delay: 15
  register: vcd_cells
  delegate_to: "{{ vcd.deployment.host }}"