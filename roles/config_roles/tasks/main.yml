---
# tasks file for config_roles

# Read globalRoles
- name: Read globalRoles from "{{ vcd.cell.primary.0.system_name }}"
  uri:
    validate_certs: false
    url: https://{{ vcd.cell.primary.0.system_name }}/cloudapi/1.0.0/globalRoles
    status_code: [200, 400]
    method: GET
    headers:
      Accept: application/json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
  register: result
  ignore_errors: true

- name: Result
  debug:
    var: result

# Read rights
- name: Read globalRoles from "{{ vcd.cell.primary.0.system_name }}"
  uri:
    validate_certs: false
    url: https://{{ vcd.cell.primary.0.system_name }}/cloudapi/1.0.0/rights
    status_code: [200, 400]
    method: GET
    headers:
      Accept: application/json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
  register: result
  ignore_errors: true

- name: Result
  debug:
    var: item
  loop: "{{ result.json | json_query('values[*].{name: name, id: id}') }}"








#- name: Read RoleRights from "{{ vcd.cell.primary.0.system_name }}"
#  uri:
#    validate_certs: false
#    url: https://{{ vcd.cell.primary.0.system_name }}/cloudapi/1.0.0/globalRoles/{{ item.0 }}/rights
#    status_code: [200, 400]
#    method: GET
#    headers:
#      Accept: application/json;version={{ vcd.api_version }}
#      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
#  register: result
#  ignore_errors: true
#  loop:
#    - "{{ result.json | json_query('values[*].id') }}"

#- name: Status Code
#  debug:
#    var: result.status

#- name: Result
#  debug:
#    var: result.results.0.json | json_query('values[*].name')

#- name: Set licenses to "{{ vcd.cell.primary.0.system_name }}"
#  uri:
#    validate_certs: false
#    url: https://{{ vcd.cell.primary.0.system_name }}/api/admin/extension/settings/license
#    status_code: [200, 400]
#    method: PUT
#    headers:
#      Content-Type: application/vnd.vmware.admin.licenseSettings+json
#      Accept: application/vnd.vmware.admin.licenseSettings+json;version={{ vcd.api_version }}
#      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
#    body_format: json
#    body:
#      serialNumber: "{{ vcd.license }}"
#  when: 'vcd.license != license.json.serialNumber'