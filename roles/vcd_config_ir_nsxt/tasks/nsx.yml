---
# tasks file for config_ir_nsx
- name: Get NSX-T
  uri:
    url: https://{{ inventory_hostname }}/api/admin/extension/nsxtManagers
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      Content-Type: application/json
      Accept: application/vnd.vmware.admin.networkManagers+json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
  register: nsxt
  delegate_to: '{{ vcd.api_host }}'

# - name: Add default parameters
#   set_fact:
#     payload: "{{ item | combine({ 'resource_type': 'IpAddressPool'}) }}"

- name: Exist, Update - add _revision parameter
  set_fact:
    method: 'PUT'
    id: "{{ (nsxt.json | json_query('nsxTManager[?url==`' + ('https://' + item.hostname) + '`].id'))[0] | replace('urn:vcloud:nsxtmanager:','') }}"
    #status_code: 200
  when: ('https://' + item.hostname) in (nsxt.json | json_query('nsxTManager[*].url'))

- name: Register NSX-T "{{ item.hostname }}"
  uri:
    url: https://{{ inventory_hostname }}/api/admin/extension/nsxtManagers/{{ id | default('') }}
    method: "{{ method | default('POST') }}"
    status_code: "{{ status_code | default('200') }}"
    validate_certs: no
    headers:
      Content-Type: application/vnd.vmware.admin.nsxTmanager+json
      Accept: application/*+json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
    body_format: json
    body:
      name: "{{ item.hostname }}"
      description: "{{ item.description | default(omit) }}"
      url: "https://{{ item.hostname }}"
      username: "{{ item.username }}"
      password: "{{ item.password }}"
  delegate_to: '{{ vcd.api_host }}'
