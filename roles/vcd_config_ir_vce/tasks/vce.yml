---
# tasks file for config_ir_vce
- name: Get vCenter
  uri:
    url: https://{{ inventory_hostname }}/cloudapi/1.0.0/virtualCenters
    method: GET
    status_code: 200
    validate_certs: no
    headers:
      Content-Type: application/json
      Accept: application/json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
  register: vcenter
  delegate_to: '{{ vcd.api_host }}'

# - name: Add default parameters
#   set_fact:
#     payload: "{{ item | combine({ 'resource_type': 'IpAddressPool'}) }}"

- name: Exist, Update - add _revision parameter
  set_fact:
    method: 'PUT'
    vcid: "{{ (vcenter.json | json_query('values[?url==`' + ('https://' + item.hostname) + '`].vcId'))[0] }}"
    #status_code: 202
  when: ('https://' + item.hostname) in (vcenter.json | json_query('values[*].url'))

- name: Register vCenter "{{ item.hostname }}"
  uri:
    url: https://{{ inventory_hostname }}/cloudapi/1.0.0/virtualCenters/{{ vcid | default('') }}
    method: "{{ method | default('POST') }}"
    status_code: "{{ status_code | default('202') }}"
    validate_certs: no
    headers:
      Content-Type: application/json
      Accept: application/json;version={{ vcd.api_version }}
      Authorization: Bearer {{ vcd_session.x_vmware_vcloud_access_token }}
    body_format: json
    body:
      name: "{{ item.hostname }}"
      description: "{{ item.description | default(omit) }}"
      url: "https://{{ item.hostname }}"
      username: "{{ item.username }}"
      password: "{{ item.password }}"
      isConnected: true
      isEnabled: true
  delegate_to: '{{ vcd.api_host }}'
